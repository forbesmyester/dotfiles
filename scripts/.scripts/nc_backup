#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

show_help() {
    echo "NAME:"
    echo "  $0 - Backups up a directory to b2"
    echo ""
    echo "USAGE:"
    echo "  $0 <BUCKET_NAME> <DIRECTORY>"
    echo ""
    echo "ARGUMENTS:"
    echo "  BUCKET_NAME     The bucket to use"
    echo "  DIRECTORY       The directory to back up"
    echo ""
}

does_bucket_exist() {
    echo $(backblaze-b2 list_buckets | awk '{print $3}' | grep "$1" | wc -l)
}

normalize_path() {
    echo "$1" | sed 's/[^a-zA-Z0-9\-]/-/g'
}

ensure_repository() {
    set +e
    if [ $(does_bucket_exist $1) -eq 0 ]; then
        backblaze-b2 authorize-account $B2_ACCOUNT_ID $B2_ACCOUNT_KEY > /dev/null
        backblaze-b2 create_bucket "$1" allPrivate > /dev/null
        restic init -r "b2:${1}:${2}"
        return $?
    fi
    set -e
}

function finish {
    rm ~/.b2_account_info
}
trap finish EXIT

set +u
if [ -z "${RESTIC_PASSWORD}" ]; then
    echo "Missing environmental variable RESTIC_PASSWORD"
    echo ""
    show_help
    exit 1;
fi

if [ -z "${B2_ACCOUNT_ID}" ] || [ -z "${B2_ACCOUNT_KEY}" ]; then
    echo "Missing environmental variable B2_ACCOUNT_KEY or B2_ACCOUNT_ID"
    echo ""
    show_help
    exit 1;
fi
set -u

if [ "$#" -lt 2 ]; then
    show_help
    exit 2;
fi

DIRECTORY="$2"
BUCKET_NAME=$(normalize_path "$1")

if ! [ -d "$DIRECTORY" ]; then
    echo "Directory $1 does not exist"
    echo ""
    show_help
    exit 1;
fi

echo $BUCKET_NAME
ensure_repository "$BUCKET_NAME" "restic"
cd $DIRECTORY
set +e
restic -r "b2:${BUCKET_NAME}:restic" init
set -e
restic -r "b2:${BUCKET_NAME}:restic" backup . # --limit-upload 200 --limit-download 750 
