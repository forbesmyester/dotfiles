#!/bin/sh

get_name() {
    local PROSP
    PROSP="$( [ -n "$KAKOUNE_SESSION" ] && echo "$KAKOUNE_SESSION" || git rev-parse --show-toplevel 2> /dev/null || echo "$PWD" )"
    echo $PROSP | tr '[:upper:]' '[:lower:]' | sed 's/[^A-Za-z0-9]/_/g' | sed 's/^_\+//' | sed 's/__\+/_/' | sed 's/_\+$//'
}

_KAK_NAME="$( get_name )"

show_help() {
    echo "$1 [-s SESSION_NAME]"
    echo ""
    echo "-s = Use session name specified as apposed to one derived from the director"
    echo "-l = List kakoune sessions"
    echo "-k = Pick a kakoune session to destroy"
    echo "-t = Create a temporary kakoune session (it just runs kak!)"
    echo "-h = Display this help"
    echo ""
    exit 0
}

while getopts "hlkts:" opt; do
    case "$opt" in
        h)
            show_help
            exit 0
            ;;
        s)
            _KAK_NAME="$OPTARG"
            if [ -n "$KAKOUNE_SESSION" ]; then
                echo 'Session cannot be specified when in an existing $KAKOUNE_SESSION'
                exit 1
            fi
            ;;
        l)
            ps aux | grep -F 'kak -d -s' | awk '$11 == "kak" { print $2 " " $14 }'
            exit 0
            ;;
        t)
            shift $(( OPTIND - 1 ))
            kak "$@"
            exit 0
            ;;
        k)
            ps aux | grep -F 'kak -d -s' | awk '$11 == "kak" { print $2 " " $14 }' | fzf | sed 's/ .*//' | parallel kill {}
            exit 0
            ;;
    esac
done
shift $(( OPTIND - 1 ))

echo "KAK_NAME: $_KAK_NAME"
[ -z "$(kak -l | grep -F -x "$_KAK_NAME")" ] && setsid kak -d -s "$_KAK_NAME" &
while ! kak -l | grep -F -x "$_KAK_NAME"; do
    echo "WAITING FOR $_KAK_NAME"
    sleep 0.1
done
kak -c "$_KAK_NAME" "$@"
