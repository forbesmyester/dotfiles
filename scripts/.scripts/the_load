#!/bin/bash
set -euo pipefail

show_help() {
    echo "NAME:"
    echo "  $0 - Gets the load of the system"
    echo ""
    echo "USAGE:"
    echo "  $0 <STATISTIC> <OUTPUT>"
    echo ""
    echo "ARGUMENTS:"
    echo "  OUTPUT     This must be either 'help', 'graph' or 'plain'"
    echo "  STATISTIC  This must be either 'load', 'battery', 'memory' or 'swap'"
    echo ""
}

if [ $# -gt 0 ] && [ $1 == "help" ]; then
    show_help
    exit 0
fi

if [ $# -lt 2 ]; then
    show_help
    exit 1;
fi

V=""

STATISTIC=$1
OUTPUT=$2

if [ $STATISTIC == "load" ]; then
    CPU_COUNT=$(cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l)

    for l in $(uptime | sed 's/.*\: \+//' | sed 's/,//g'); do
        printf -v jlh "%0.0f" $(echo "scale=2; ($l / $CPU_COUNT) * 100" | bc -l)
        V="$V $jlh"
    done
    V=${V:1}
fi

if [ $STATISTIC == "battery" ]; then
    V=$(( 100 - $(upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | sed 's/.*: *//' | sed 's/%//') ))
fi

if [ $STATISTIC == "memory" ]; then
    V=$(free -w | awk '/Mem:/ { total=$2 } /Mem:/ { used=$8 } END { print (1 - (used / total)) * 100}' | sed 's/\..*//')
fi

if [ $STATISTIC == "swap" ]; then
    V=$(free -w | awk '/Swap:/ { total=$2 } /Swap:/ { used=$3 } END { print (used / total) * 100}' | sed 's/[\.].*//')
fi

OUT="100 $V 0"
if [ $OUTPUT == "graph" ]; then
    GRAPH=$(echo $OUT | spark)
    # if [ "${STATISTIC}" != "load" ]; then
    #     # if [ "$V" -gt 95 ]; then
    #     #     echo "⩩";
    #     #     exit 0;
    #     # fi
    #     if [ "$V" -lt 5 ]; then
    #         echo "⎽";
    #         exit 0;
    #     fi
    # fi
    echo "${GRAPH:1:-1}"
    exit 0
fi

if [ $OUTPUT == "plain" ]; then
    echo "$V"
    exit 0
fi

show_help
exit 1;
